name: CI/CD Workflow

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: kaitaoms/eqmaster:latest # Ensure this tag matches with the one used in deployment

  setup-and-create-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Azure SQL Database Resource Group
        run: |
          az group create --name eqmaster --location japaneast

      - name: Create Azure SQL Server
        run: |
          az sql server create --name eqmasterserver --resource-group eqmaster --location japaneast \
            --admin-user myadmin --admin-password ${{ secrets.SQL_PSWD }}

      - name: Create Azure SQL Database
        run: |
          az sql db create --resource-group eqmaster --server eqmasterserver --name eqmasterdb --service-objective S0

      - name: Install SQLCMD
        run: |
          sudo apt-get install mssql-tools unixodbc-dev

      - name: Execute SQL script to create tables
        env:
          SQLCMDPASSWORD: ${{ secrets.SQL_PSWD }}
        run: |
          sqlcmd -S tcp:eqmasterserver.database.windows.net,1433 -d eqmasterdb -U myadmin -i sql/init.sql

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Web App with Docker support
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az appservice plan create --name myAppServicePlan --resource-group eqmaster --sku B1 --is-linux
            az webapp create --resource-group eqmaster --plan myAppServicePlan --name eqmaster --deployment-container-image-name kaitaoms/eqmaster:latest

      - name: Configure DockerHub credentials for private image
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp config container set --name eqmaster --resource-group eqmaster --docker-custom-image-name kaitaoms/eqmaster:latest --docker-registry-server-url https://index.docker.io/v1/ --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} --docker-registry-server-password ${{ secrets.DOCKERHUB_TOKEN }}
